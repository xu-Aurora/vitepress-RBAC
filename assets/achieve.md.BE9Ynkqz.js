import{_ as e,c as t,a2 as r,o}from"./chunks/framework.BYXuqZnX.js";const u=JSON.parse('{"title":"实现原理","description":"","frontmatter":{},"headers":[],"relativePath":"achieve.md","filePath":"achieve.md"}'),i={name:"achieve.md"};function n(c,a,d,h,s,l){return o(),t("div",null,a[0]||(a[0]=[r('<h1 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h1><p>在前端固定写死路由, 执行路由哪些权限有查看。只初始化通用的路由, 需要权限才能访问的路由不加入路由表。在登录后, 通过角色遍历路由表, 获取该角色可以访问的路由表, 生成新的路由表, 通过 <code>router.addRoutes</code> 添加到路由实例, 实现权限的过滤</p><h2 id="系统管理" tabindex="-1">系统管理 <a class="header-anchor" href="#系统管理" aria-label="Permalink to &quot;系统管理&quot;">​</a></h2><p>只有超级管理员才有此权限</p><h2 id="静态路由" tabindex="-1">静态路由 <a class="header-anchor" href="#静态路由" aria-label="Permalink to &quot;静态路由&quot;">​</a></h2><p>指所有用户都可以访问的路由, 比如登录、注册、修改密码等公共路由</p><h2 id="动态路由" tabindex="-1">动态路由 <a class="header-anchor" href="#动态路由" aria-label="Permalink to &quot;动态路由&quot;">​</a></h2><p>后端接口返回, 和前端路由表匹配</p>',8)]))}const m=e(i,[["render",n]]);export{u as __pageData,m as default};
